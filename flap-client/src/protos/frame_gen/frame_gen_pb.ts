// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file protos/frame_gen/frame_gen.proto (package frame_gen, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file protos/frame_gen/frame_gen.proto.
 */
export const file_protos_frame_gen_frame_gen: GenFile = /*@__PURE__*/
  fileDesc("CiBwcm90b3MvZnJhbWVfZ2VuL2ZyYW1lX2dlbi5wcm90bxIJZnJhbWVfZ2VuIhsKA1BvcxIJCgF4GAEgASgBEgkKAXkYAiABKAEivQEKEEdlbmVyYXRlRnJhbWVSZXESDwoHZ2FtZV9pZBgBIAEoCRIlCg1iaXJkX3Bvc2l0aW9uGAIgASgLMg4uZnJhbWVfZ2VuLlBvcxImCg5waXBlX3Bvc2l0aW9ucxgDIAMoCzIOLmZyYW1lX2dlbi5Qb3MSEwoLcGlwZV9zdGFydHMYBCADKAESEQoJcGlwZV9nYXBzGAUgAygBEg0KBXNjb3JlGAYgASgFEhIKCnBpcGVfd2lkdGgYByABKAUiJwoRR2VuZXJhdGVGcmFtZVJlc3ASEgoKZnJhbWVfZGlmZhgHIAEoDDJfCg9GcmFtZUdlblNlcnZpY2USTAoNR2VuZXJhdGVGcmFtZRIbLmZyYW1lX2dlbi5HZW5lcmF0ZUZyYW1lUmVxGhwuZnJhbWVfZ2VuLkdlbmVyYXRlRnJhbWVSZXNwIgBCD1oNLi87ZnJhbWVnZW5wYmIGcHJvdG8z");

/**
 * @generated from message frame_gen.Pos
 */
export type Pos = Message<"frame_gen.Pos"> & {
  /**
   * @generated from field: double x = 1;
   */
  x: number;

  /**
   * @generated from field: double y = 2;
   */
  y: number;
};

/**
 * Describes the message frame_gen.Pos.
 * Use `create(PosSchema)` to create a new message.
 */
export const PosSchema: GenMessage<Pos> = /*@__PURE__*/
  messageDesc(file_protos_frame_gen_frame_gen, 0);

/**
 * @generated from message frame_gen.GenerateFrameReq
 */
export type GenerateFrameReq = Message<"frame_gen.GenerateFrameReq"> & {
  /**
   * @generated from field: string game_id = 1;
   */
  gameId: string;

  /**
   * @generated from field: frame_gen.Pos bird_position = 2;
   */
  birdPosition?: Pos;

  /**
   * The clouds should be fixed and part of the background
   *
   * @generated from field: repeated frame_gen.Pos pipe_positions = 3;
   */
  pipePositions: Pos[];

  /**
   * Please consult the world generator for what this means
   *
   * @generated from field: repeated double pipe_starts = 4;
   */
  pipeStarts: number[];

  /**
   * @generated from field: repeated double pipe_gaps = 5;
   */
  pipeGaps: number[];

  /**
   * @generated from field: int32 score = 6;
   */
  score: number;

  /**
   * The actual width of each pipe
   *
   * @generated from field: int32 pipe_width = 7;
   */
  pipeWidth: number;
};

/**
 * Describes the message frame_gen.GenerateFrameReq.
 * Use `create(GenerateFrameReqSchema)` to create a new message.
 */
export const GenerateFrameReqSchema: GenMessage<GenerateFrameReq> = /*@__PURE__*/
  messageDesc(file_protos_frame_gen_frame_gen, 1);

/**
 * @generated from message frame_gen.GenerateFrameResp
 */
export type GenerateFrameResp = Message<"frame_gen.GenerateFrameResp"> & {
  /**
   * @generated from field: bytes frame_diff = 7;
   */
  frameDiff: Uint8Array;
};

/**
 * Describes the message frame_gen.GenerateFrameResp.
 * Use `create(GenerateFrameRespSchema)` to create a new message.
 */
export const GenerateFrameRespSchema: GenMessage<GenerateFrameResp> = /*@__PURE__*/
  messageDesc(file_protos_frame_gen_frame_gen, 2);

/**
 * @generated from service frame_gen.FrameGenService
 */
export const FrameGenService: GenService<{
  /**
   * @generated from rpc frame_gen.FrameGenService.GenerateFrame
   */
  generateFrame: {
    methodKind: "unary";
    input: typeof GenerateFrameReqSchema;
    output: typeof GenerateFrameRespSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_protos_frame_gen_frame_gen, 0);

